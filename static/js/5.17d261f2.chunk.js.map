{"version":3,"sources":["assets/img/avatar.jpg","components/Messages/Messages.jsx","actions/messanger.js","../node_modules/classnames/index.js"],"names":["compose","withAuthRedirect","dispatch","useDispatch","useSelector","state","messanger","dialogs","messages","activeDialogId","newMessage","onClickDialog","id","type","SET_ACTIVE_DIALOG","payload","setActiveDialog","className","map","dialog","name","classNames","key","onClick","src","avatar","alt","message","author","time","text","onSubmit","e","preventDefault","SEND_MESSAGE","onChange","messageValue","target","value","CHANGE_NEW_MESSAGE","placeholder","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","join","module","exports","default"],"mappings":";4KAAe,MAA0B,mCCmF1BA,sBAAQC,IAARD,EA1Ef,WACG,IAAME,EAAWC,cADA,EAEyCC,aACvD,SAACC,GAAD,OAAWA,EAAMC,aADZC,EAFS,EAETA,QAASC,EAFA,EAEAA,SAAUC,EAFV,EAEUA,eAAgBC,EAF1B,EAE0BA,WAYrCC,EAAgB,SAACC,GACpBV,ECtByB,SAACO,GAAD,MAAqB,CACjDI,KAAMC,IACNC,QAASN,GDoBGO,CAAgBJ,KAE5B,OACG,yBAAKK,UAAU,YACZ,yBAAKA,UAAU,wBACZ,yBAAKA,UAAU,wBAAf,8CACCV,EAAQW,KAAI,SAACC,GAAY,IACfP,EAAaO,EAAbP,GAAIQ,EAASD,EAATC,KACZ,OACG,yBACGH,UAAWI,IAAW,sBAAuB,CAC1C,gBAAiBZ,IAAmBG,IAEvCU,IAAKV,EACLW,QAAS,kBAAMZ,EAAcC,KAE7B,yBAAKK,UAAU,UACZ,yBAAKO,IAAKC,EAAQC,IAAKN,KAE1B,8BAAOA,QAMnB,yBAAKH,UAAU,0BACZ,yBAAKA,UAAU,yBACXT,EAASC,GAAgBS,KAAI,SAACS,GAC5B,OACG,yBACGV,UAAWI,IAAW,gBAAiB,CACpCO,OAA2B,2DAAnBD,EAAQC,SAEnBN,IAAKK,EAAQf,IAEb,yBAAKK,UAAU,mBAAmBU,EAAQC,QAC1C,yBAAKX,UAAU,iBAAiBU,EAAQE,MACxC,yBAAKZ,UAAU,iBAAiBU,EAAQG,WAKpD,yBAAKb,UAAU,yBACZ,0BAAMA,UAAU,WAAWc,SAjDjB,SAACC,GACpBA,EAAEC,iBACF/B,ECb4B,CAC/BW,KAAMqB,QD4DS,2BACGC,SAtDM,SAACH,GCJI,IAACI,EDK3BlC,GCL2BkC,EDKDJ,EAAEK,OAAOC,MCLU,CAChDzB,KAAM0B,IACNxB,QAASqB,MDyDSE,MAAO5B,EACPO,UAAU,iBACVJ,KAAK,OACL2B,YAAY,8IAEf,4BAAQvB,UAAU,qBAAlB,kE,mBE3ElB,OAOC,WACA,aAEA,IAAIwB,EAAS,GAAGC,eAEhB,SAASrB,IAGR,IAFA,IAAIsB,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC5C,IAAIM,EAAQ/B,EAAWgC,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAI1B,KAAOyB,EACXN,EAAOa,KAAKP,EAAKzB,IAAQyB,EAAIzB,IAChCqB,EAAQM,KAAK3B,IAMjB,OAAOqB,EAAQY,KAAK,KAGgBC,EAAOC,SAC3CpC,EAAWqC,QAAUrC,EACrBmC,EAAOC,QAAUpC,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP","file":"static/js/5.17d261f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.5cfdf1e8.jpg\";","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport { setActiveDialog, sendMessage, changeNewMessage } from '../../actions/messanger';\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\n\r\nimport avatar from '../../assets/img/avatar.jpg';\r\n\r\nfunction Messages() {\r\n   const dispatch = useDispatch();\r\n   const { dialogs, messages, activeDialogId, newMessage } = useSelector(\r\n      (state) => state.messanger\r\n   );\r\n\r\n   const onMessageChange = (e) => {\r\n      dispatch(changeNewMessage(e.target.value));\r\n   };\r\n   const onSendMessage = (e) => {\r\n      e.preventDefault();\r\n      dispatch(sendMessage());\r\n   };\r\n\r\n   const onClickDialog = (id) => {\r\n      dispatch(setActiveDialog(id));\r\n   };\r\n   return (\r\n      <div className=\"messages\">\r\n         <div className=\"messages__list block\">\r\n            <div className=\"messages__list-title\">Диалоги</div>\r\n            {dialogs.map((dialog) => {\r\n               const { id, name } = dialog;\r\n               return (\r\n                  <div\r\n                     className={classNames('messages__list-item', {\r\n                        'active-dialog': activeDialogId === id,\r\n                     })}\r\n                     key={id}\r\n                     onClick={() => onClickDialog(id)}\r\n                  >\r\n                     <div className=\"avatar\">\r\n                        <img src={avatar} alt={name} />\r\n                     </div>\r\n                     <span>{name}</span>\r\n                  </div>\r\n               );\r\n            })}\r\n         </div>\r\n\r\n         <div className=\"messages__dialog block\">\r\n            <div className=\"messages__dialog-body\">\r\n               {messages[activeDialogId].map((message) => {\r\n                  return (\r\n                     <div\r\n                        className={classNames('message block', {\r\n                           author: message.author === 'Александр',\r\n                        })}\r\n                        key={message.id}\r\n                     >\r\n                        <div className=\"message__author\">{message.author}</div>\r\n                        <div className=\"message__time\">{message.time}</div>\r\n                        <div className=\"message__text\">{message.text}</div>\r\n                     </div>\r\n                  );\r\n               })}\r\n            </div>\r\n            <div className=\"messages__dialog-form\">\r\n               <form className=\"add-form\" onSubmit={onSendMessage}>\r\n                  <input\r\n                     onChange={onMessageChange}\r\n                     value={newMessage}\r\n                     className=\"add-form-field\"\r\n                     type=\"text\"\r\n                     placeholder=\"Напишите текст сообщения...\"\r\n                  />\r\n                  <button className=\"btn btn--add-form\">Отправить</button>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default compose(withAuthRedirect)(Messages);\r\n","import { SET_ACTIVE_DIALOG, SEND_MESSAGE, CHANGE_NEW_MESSAGE } from './types';\r\n\r\nexport const setActiveDialog = (activeDialogId) => ({\r\n   type: SET_ACTIVE_DIALOG,\r\n   payload: activeDialogId,\r\n});\r\n\r\nexport const sendMessage = () => ({\r\n   type: SEND_MESSAGE,\r\n});\r\n\r\nexport const changeNewMessage = (messageValue) => ({\r\n   type: CHANGE_NEW_MESSAGE,\r\n   payload: messageValue,\r\n});\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}