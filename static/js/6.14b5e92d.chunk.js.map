{"version":3,"sources":["selectors/usersSelectors.js","components/common/Pagination/NavButton.jsx","components/common/Pagination/Pagination.jsx","components/Users/User.jsx","components/Users/Users.jsx","actions/users.js"],"names":["selectUserPagesCount","createSelector","state","users","totalUsersCount","pageSize","Math","ceil","selectUsersData","NavButton","handler","disabledTrigger","icoId","className","onClick","disabled","href","sprite","Pagination","React","memo","pagesCount","currentPage","onPageChange","isLoading","visiblePartSize","useState","visiblePartNumber","setVisiblePartNumber","pages","i","push","visiblePartsCount","leftBorder","rightBorder","filter","page","map","key","classNames","active","length","initialValues","onSubmit","values","resetForm","currentPartNumber","goToPageHandler","type","name","value","User","id","photos","followed","followingInProgress","onClickUnfollow","onClickFollow","to","src","large","photoHolder","alt","some","item","compose","withAuthRedirect","dispatch","useDispatch","useSelector","items","useEffect","fetchUsers","fetchFollow","fetchUnfollow","Loader","setCurrentPage","visiblePagesSize","SET_CURRENT_PAGE","payload","setFollowingProgress","data","SET_FOLLOWING","toggleFollow","TOGGLE_FOLLOW_USER","a","SET_LOADING","usersApi","getUsers","resp","usersData","SET_USERS","followUnfollowFlow","apiMethod","resultCode","isFetching","followUser","unfollowUser"],"mappings":"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","file":"static/js/6.14b5e92d.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nexport const selectUserPagesCount = createSelector(\r\n   (state) => state.users, \r\n   ({totalUsersCount, pageSize}) => Math.ceil(totalUsersCount / pageSize)\r\n   );\r\nexport const selectUsersData = (state) => state.users;\r\n","import React from 'react';\r\n\r\nimport sprite from '../../../assets/img/sprite.svg';\r\n\r\nfunction NavButton({ handler, disabledTrigger, icoId }) {\r\n   return (\r\n      <button className=\"pagination__btn-item pagination__block\" onClick={handler} disabled={disabledTrigger}>\r\n         <svg className=\"pagination__btn-ico\">\r\n            <use href={sprite + icoId} />\r\n         </svg>\r\n      </button>\r\n   );\r\n}\r\n\r\nexport default NavButton;\r\n","import React, { useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport NavButton from './NavButton';\r\n\r\nconst Pagination = React.memo(function Pagination({\r\n   pagesCount,\r\n   currentPage,\r\n   onPageChange,\r\n   isLoading,\r\n   visiblePartSize = 10,\r\n}) {\r\n   const [visiblePartNumber, setVisiblePartNumber] = useState(1);\r\n\r\n   const pages = [];\r\n   for (let i = 1; i <= pagesCount; i++) {\r\n      pages.push(i);\r\n   }\r\n   const visiblePartsCount = Math.ceil(pagesCount / visiblePartSize);\r\n   const leftBorder = (visiblePartNumber - 1) * visiblePartSize + 1;\r\n   const rightBorder = visiblePartNumber * visiblePartSize;\r\n\r\n   const nextPageHandler = () => {\r\n      if (currentPage >= rightBorder) {\r\n         setVisiblePartNumber(visiblePartNumber + 1);\r\n      }\r\n      onPageChange(currentPage + 1);\r\n   };\r\n\r\n   const prevPageHandler = () => {\r\n      if (currentPage <= leftBorder) {\r\n         setVisiblePartNumber(visiblePartNumber - 1);\r\n      }\r\n      onPageChange(currentPage - 1);\r\n   };\r\n\r\n   const toEndHandler = () => {\r\n      setVisiblePartNumber(visiblePartsCount);\r\n      onPageChange((visiblePartsCount - 1) * visiblePartSize + 1);\r\n   };\r\n\r\n   const toStartHandler = () => {\r\n      setVisiblePartNumber(1);\r\n      onPageChange(1);\r\n   };\r\n\r\n   const goToPageHandler = ({ currentPage }, { resetForm }) => {\r\n      const currentPartNumber = Math.ceil(currentPage / visiblePartSize);\r\n      if (currentPage >= 1 && currentPartNumber <= visiblePartsCount) {\r\n         setVisiblePartNumber(currentPartNumber);\r\n         onPageChange(currentPage);\r\n         resetForm();\r\n      }\r\n   };\r\n\r\n   return (\r\n      <ul className=\"pagination\">\r\n         <div className=\"pagination__btn-group\">\r\n            {visiblePartNumber > 1 && (\r\n               <NavButton handler={toStartHandler} disabledTrigger={isLoading} icoId=\"#double-arrow\" />\r\n            )}\r\n            {currentPage > 1 && <NavButton handler={prevPageHandler} disabledTrigger={isLoading} icoId=\"#arrow\" />}\r\n         </div>\r\n         {pages\r\n            .filter((page) => page >= leftBorder && page <= rightBorder)\r\n            .map((page) => {\r\n               return (\r\n                  <li\r\n                     key={page}\r\n                     className={classNames('pagination__item', 'pagination__block', {\r\n                        active: currentPage === page,\r\n                     })}\r\n                     onClick={() => onPageChange(page)}\r\n                  >\r\n                     {page}\r\n                  </li>\r\n               );\r\n            })}\r\n         <div className=\"pagination__btn-group\">\r\n            {visiblePartsCount > visiblePartNumber && (\r\n               <NavButton handler={toEndHandler} disabledTrigger={isLoading} icoId=\"#double-arrow\" />\r\n            )}\r\n            {currentPage < pagesCount && (\r\n               <NavButton handler={nextPageHandler} disabledTrigger={isLoading} icoId=\"#arrow\" />\r\n            )}\r\n         </div>\r\n         {pages.length > 10 && (\r\n            <Formik\r\n               initialValues={{\r\n                  currentPage: '',\r\n               }}\r\n               onSubmit={(values, { resetForm }) => goToPageHandler(values, { resetForm })}\r\n            >\r\n               {({ values }) => (\r\n                  <Form className=\"pagination__form\">\r\n                     <Field\r\n                        type=\"number\"\r\n                        name=\"currentPage\"\r\n                        className=\"pagination__form-input\"\r\n                        value={values.currentPage}\r\n                     />\r\n                     <button className=\"pagination__form-btn\" disabled={isLoading} type=\"submit\">\r\n                        Перейти\r\n                     </button>\r\n                  </Form>\r\n               )}\r\n            </Formik>\r\n         )}\r\n      </ul>\r\n   );\r\n});\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nimport photoHolder from '../../assets/img/user.png';\r\n\r\nconst User = React.memo(function User({\r\n   id,\r\n   name,\r\n   photos,\r\n   followed,\r\n   followingInProgress,\r\n   onClickUnfollow,\r\n   onClickFollow,\r\n}) {\r\n   return (\r\n      <li className=\"users__item block\" key={id}>\r\n         <Link to={`/profile/${id}`}>\r\n            <span className=\"users__item-photo\">\r\n               <img src={photos.large || photoHolder} alt={name} />\r\n            </span>\r\n            <span className=\"users__item-name\">{name}</span>\r\n         </Link>\r\n         <button\r\n            className={classNames('btn', { 'btn--unfollow': followed, 'btn--follow': !followed })}\r\n            onClick={followed ? () => onClickUnfollow(id) : () => onClickFollow(id)}\r\n            disabled={followingInProgress.some((item) => item === id)}\r\n         >\r\n            {followed ? 'Вы подписаны' : 'Подписаться'}\r\n         </button>\r\n      </li>\r\n   );\r\n});\r\n\r\nexport default User;\r\n","import React, { useEffect } from 'react';\r\nimport { compose } from 'redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport withAuthRedirect from '../hoc/withAuthRedirect';\r\nimport Loader from '../common/Loader/Loader';\r\nimport { fetchUsers, setCurrentPage, fetchFollow, fetchUnfollow } from '../../actions/users';\r\nimport { selectUserPagesCount, selectUsersData } from '../../selectors/usersSelectors';\r\nimport Pagination from '../common/Pagination/Pagination';\r\nimport User from './User';\r\n\r\nfunction Users() {\r\n   const dispatch = useDispatch();\r\n   const { items, pageSize, currentPage, isLoading, followingInProgress } = useSelector(selectUsersData);\r\n   const pagesCount = useSelector(selectUserPagesCount);\r\n   useEffect(() => {\r\n      dispatch(fetchUsers(currentPage, pageSize));\r\n   }, [currentPage]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n   const onPageChange = (page) => {\r\n      dispatch(setCurrentPage(page));\r\n   };\r\n\r\n   const onClickFollow = (id) => {\r\n      dispatch(fetchFollow(id));\r\n   };\r\n   const onClickUnfollow = (id) => {\r\n      dispatch(fetchUnfollow(id));\r\n   };\r\n\r\n   return (\r\n      <div className=\"users\">\r\n         {isLoading && <Loader />}\r\n         <Pagination\r\n            pagesCount={pagesCount}\r\n            currentPage={currentPage}\r\n            onPageChange={onPageChange}\r\n            isLoading={isLoading}\r\n            visiblePagesSize={10}\r\n         />\r\n         <ul className=\"users__list\">\r\n            {items.map(({ id, name, followed, photos }) => {\r\n               return (\r\n                  <User\r\n                     key={id}\r\n                     id={id}\r\n                     name={name}\r\n                     photos={photos}\r\n                     followed={followed}\r\n                     followingInProgress={followingInProgress}\r\n                     onClickUnfollow={onClickUnfollow}\r\n                     onClickFollow={onClickFollow}\r\n                  />\r\n               );\r\n            })}\r\n         </ul>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default compose(withAuthRedirect)(Users);\r\n","import { usersApi } from '../api/api';\r\n\r\nimport { SET_USERS, SET_CURRENT_PAGE, SET_LOADING, TOGGLE_FOLLOW_USER, SET_FOLLOWING } from './types';\r\n\r\nexport const setUsers = (usersData) => ({\r\n   type: SET_USERS,\r\n   payload: usersData,\r\n});\r\n\r\nexport const setCurrentPage = (page) => ({\r\n   type: SET_CURRENT_PAGE,\r\n   payload: page,\r\n});\r\n\r\nexport const setLoadingProgress = () => ({\r\n   type: SET_LOADING,\r\n});\r\n\r\nexport const setFollowingProgress = (data) => ({\r\n   type: SET_FOLLOWING,\r\n   payload: data,\r\n});\r\n\r\nexport const toggleFollow = (id) => ({\r\n   type: TOGGLE_FOLLOW_USER,\r\n   payload: id,\r\n});\r\n\r\nexport const fetchUsers = (currentPage, pageSize) => async (dispatch) => {\r\n   dispatch(setLoadingProgress());\r\n   const resp = await usersApi.getUsers(currentPage, pageSize, null, false);\r\n   dispatch(setUsers(resp));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod) => {\r\n   const resp = await apiMethod(id);\r\n   if (resp.resultCode === 0) {\r\n      dispatch(toggleFollow(id));\r\n   }\r\n};\r\n\r\nexport const fetchFollow = (id) => async (dispatch) => {\r\n   dispatch(setFollowingProgress({ isFetching: true, id }));\r\n   followUnfollowFlow(dispatch, id, usersApi.followUser);\r\n};\r\n\r\nexport const fetchUnfollow = (id) => async (dispatch) => {\r\n   dispatch(setFollowingProgress({ isFetching: true, id }));\r\n   followUnfollowFlow(dispatch, id, usersApi.unfollowUser);\r\n};\r\n"],"sourceRoot":""}